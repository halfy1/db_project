<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û—Ç—á—ë—Ç—ã –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class'
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .report-card {
            transition: all 0.3s ease;
        }
        .report-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .dark .report-card:hover {
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
            animation: fadeIn 0.5s;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .project-toggle {
            cursor: pointer;
            transition: all 0.2s;
        }
        .project-toggle:hover {
            background-color: rgba(79, 70, 229, 0.1);
        }
        .dark .project-toggle:hover {
            background-color: rgba(99, 102, 241, 0.1);
        }
        .project-toggle.active {
            background-color: rgba(79, 70, 229, 0.2);
            border-left: 3px solid #4f46e5;
        }
        .dark .project-toggle.active {
            background-color: rgba(99, 102, 241, 0.2);
            border-left: 3px solid #6366f1;
        }
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
        }
        .chart-container {
            position: relative;
            height: 300px;
        }
        .legend-item {
            display: flex;
            align-items: center;
            cursor: pointer;
        }
        .legend-color {
            width: 16px;
            height: 16px;
            margin-right: 8px;
            border-radius: 3px;
        }
        .metric-card {
            transition: transform 0.3s ease;
        }
        .metric-card:hover {
            transform: scale(1.03);
        }
    </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4 py-8">
        <header class="mb-10 relative">
            <div class="flex justify-between items-start">
                <div>
                    <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-2">üìä –û—Ç—á—ë—Ç—ã –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h1>
                    <p class="text-gray-600 dark:text-gray-300">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã</p>
                </div>
                <button id="themeToggle" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-yellow-300">
                    <i class="fas fa-moon dark:hidden"></i>
                    <i class="fas fa-sun hidden dark:block"></i>
                </button>
            </div>
        </header>

        <div class="flex flex-col md:flex-row gap-6 mb-8">
            <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –æ—Ç—á—ë—Ç–∞–º -->
            <div class="md:w-1/4">
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 sticky top-6">
                    <h2 class="text-xl font-semibold mb-4 text-gray-800 dark:text-white">–ú–µ–Ω—é –æ—Ç—á—ë—Ç–æ–≤</h2>
                    <nav>
                        <ul class="space-y-2">
                            <li>
                                <button onclick="showTab('current-projects')" class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium flex items-center">
                                    <i class="fas fa-tasks mr-3"></i> –¢–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                                </button>
                            </li>
                            <li>
                                <button onclick="showTab('employee-history')" class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium flex items-center">
                                    <i class="fas fa-user-clock mr-3"></i> –ò—Å—Ç–æ—Ä–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                                </button>
                            </li>
                            <li>
                                <button onclick="showTab('quality-metrics')" class="w-full text-left px-4 py-3 rounded-lg bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-200 font-medium flex items-center">
                                    <i class="fas fa-chart-line mr-3"></i> –ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                                </button>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>

            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—á—ë—Ç–æ–≤ -->
            <div class="md:w-3/4">
                <!-- –û—Ç—á—ë—Ç 3: –ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π) -->
                <div id="quality-metrics" class="tab-content active">
                    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden mb-8">
                        <div class="p-6 bg-gradient-to-r from-indigo-500 to-indigo-600">
                            <div class="flex justify-between items-center">
                                <h2 class="text-2xl font-bold text-white">üìà –ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</h2>
                                <span class="bg-white bg-opacity-20 px-3 py-1 rounded-full text-white text-sm font-medium">–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
                            </div>
                            <p class="text-indigo-100 dark:text-indigo-200 mt-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–≥–æ–≤, –∫–æ–¥-—Ä–µ–≤—å—é –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º</p>
                        </div>
                        
                        <div class="p-6">
                            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–≤–µ—Ä—Ö—É -->
                            <div class="grid-container mb-8">
                                <div class="metric-card report-card bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 shadow-sm">
                                    <div class="flex items-center justify-between mb-4">
                                        <h3 class="text-lg font-medium text-gray-800 dark:text-white">–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤</h3>
                                        <div class="bg-indigo-100 dark:bg-indigo-900 text-indigo-800 dark:text-indigo-200 p-2 rounded-lg">
                                            <i class="fas fa-project-diagram"></i>
                                        </div>
                                    </div>
                                    <p class="text-3xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">12</p>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">–≤–∫–ª—é—á–∞—è 4 –∞–∫—Ç–∏–≤–Ω—ã—Ö</p>
                                </div>
                                
                                <div class="metric-card report-card bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 shadow-sm">
                                    <div class="flex items-center justify-between mb-4">
                                        <h3 class="text-lg font-medium text-gray-800 dark:text-white">–°—Ä–µ–¥–Ω–∏–π –±–∞–≥-—Ä–µ–π—Ç</h3>
                                        <div class="bg-amber-100 dark:bg-amber-900 text-amber-800 dark:text-amber-200 p-2 rounded-lg">
                                            <i class="fas fa-bug"></i>
                                        </div>
                                    </div>
                                    <p class="text-3xl font-bold text-amber-600 dark:text-amber-400 mb-2">0.42</p>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">–±–∞–≥–æ–≤/—á–µ–ª–æ–≤–µ–∫–æ-–¥–µ–Ω—å</p>
                                </div>
                                
                                <div class="metric-card report-card bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 shadow-sm">
                                    <div class="flex items-center justify-between mb-4">
                                        <h3 class="text-lg font-medium text-gray-800 dark:text-white">–§–∞–∫—Ç–æ—Ä –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π</h3>
                                        <div class="bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 p-2 rounded-lg">
                                            <i class="fas fa-check-double"></i>
                                        </div>
                                    </div>
                                    <p class="text-3xl font-bold text-green-600 dark:text-green-400 mb-2">82%</p>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">–±–∞–≥–æ–≤ –∑–∞–∫—Ä—ã—Ç–æ –≤ —Å—Ä–æ–∫</p>
                                </div>
                            </div>

                            <!-- –§–∏–ª—å—Ç—Ä—ã –ø—Ä–æ–µ–∫—Ç–æ–≤ -->
                            <div class="mb-6">
                                <h3 class="text-lg font-medium text-gray-800 dark:text-white mb-4">–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã:</h3>
                                <div class="flex flex-wrap gap-3">
                                    <button id="filter-all" class="project-toggle active px-4 py-2 rounded-lg bg-indigo-600 dark:bg-indigo-700 text-white" 
                                            onclick="filterProjects('all')">
                                        <i class="fas fa-layer-group mr-2"></i>–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
                                    </button>
                                    <button id="filter-crm" class="project-toggle px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:text-gray-300 text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                            onclick="filterProjects('crm')">
                                        <i class="fas fa-users mr-2"></i>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CRM
                                    </button>
                                    <button id="filter-mobile" class="project-toggle px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:text-gray-300 text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                            onclick="filterProjects('mobile')">
                                        <i class="fas fa-mobile-alt mr-2"></i>–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                                    </button>
                                    <button id="filter-portal" class="project-toggle px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:text-gray-300 text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                            onclick="filterProjects('portal')">
                                        <i class="fas fa-laptop mr-2"></i>–ü–æ—Ä—Ç–∞–ª –∫–ª–∏–µ–Ω—Ç–æ–≤
                                    </button>
                                    <button id="filter-auto" class="project-toggle px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:text-gray-300 text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700" 
                                            onclick="filterProjects('auto')">
                                        <i class="fas fa-robot mr-2"></i>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
                                    </button>
                                </div>
                            </div>

                            <!-- –ì—Ä–∞—Ñ–∏–∫–∏ -->
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                                <!-- –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫ -->
                                <div class="report-card bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700 col-span-2">
                                    <h3 class="text-lg font-medium text-gray-800 dark:text-white mb-4">–î–∏–Ω–∞–º–∏–∫–∞ –±–∞–≥–æ–≤ –ø–æ –º–µ—Å—è—Ü–∞–º</h3>
                                    <div class="chart-container">
                                        <canvas id="mainChart"></canvas>
                                    </div>
                                    <div id="mainChartLegend" class="flex flex-wrap justify-center mt-4 gap-4"></div>
                                </div>
                                
                                <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ -->
                                <div class="report-card bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700">
                                    <h3 class="text-lg font-medium text-gray-800 dark:text-white mb-4">–¢–∏–ø—ã –±–∞–≥–æ–≤</h3>
                                    <div class="chart-container">
                                        <canvas id="bugTypesChart"></canvas>
                                    </div>
                                </div>
                                
                                <div class="report-card bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700">
                                    <h3 class="text-lg font-medium text-gray-800 dark:text-white mb-4">–°–∫–æ—Ä–æ—Å—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h3>
                                    <div class="chart-container">
                                        <canvas id="fixSpeedChart"></canvas>
                                    </div>
                                </div>
                            </div>

                            <!-- –¢–∞–±–ª–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π -->
                            <h3 class="text-lg font-medium text-gray-800 dark:text-white mb-4">–î–µ—Ç–∞–ª–∏ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º</h3>
                            <div class="overflow-x-auto">
                                <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm">
                                    <thead class="bg-gray-100 dark:bg-gray-700">
                                        <tr>
                                            <th class="px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300">–ü—Ä–æ–µ–∫—Ç</th>
                                            <th class="px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300">–ë–∞–≥-—Ä–µ–π—Ç</th>
                                            <th class="px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300">–†–µ–≤—å—é</th>
                                            <th class="px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ</th>
                                            <th class="px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è</th>
                                            <th class="px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300">–°—Ç–∞—Ç—É—Å</th>
                                        </tr>
                                    </thead>
                                    <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                                        <tr id="row-crm" class="project-row hover:bg-gray-50 dark:hover:bg-gray-700" data-project="crm">
                                            <td class="px-4 py-3 whitespace-nowrap font-medium text-gray-800 dark:text-white">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CRM</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200">0.62</span></td>
                                            <td class="px-4 py-3 whitespace-nowrap">74%</td>
                                            <td class="px-4 py-3 whitespace-nowrap">12</td>
                                            <td class="px-4 py-3 whitespace-nowrap">3.2 –¥–Ω</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200">–°—Ä–µ–¥–Ω–∏–π</span></td>
                                        </tr>
                                        <tr id="row-mobile" class="project-row hover:bg-gray-50 dark:hover:bg-gray-700" data-project="mobile">
                                            <td class="px-4 py-3 whitespace-nowrap font-medium text-gray-800 dark:text-white">–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-orange-100 dark:bg-orange-900 text-orange-800 dark:text-orange-200">0.53</span></td>
                                            <td class="px-4 py-3 whitespace-nowrap">68%</td>
                                            <td class="px-4 py-3 whitespace-nowrap">8</td>
                                            <td class="px-4 py-3 whitespace-nowrap">4.1 –¥–Ω</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200">–°—Ä–µ–¥–Ω–∏–π</span></td>
                                        </tr>
                                        <tr id="row-portal" class="project-row hover:bg-gray-50 dark:hover:bg-gray-700" data-project="portal">
                                            <td class="px-4 py-3 whitespace-nowrap font-medium text-gray-800 dark:text-white">–ü–æ—Ä—Ç–∞–ª –∫–ª–∏–µ–Ω—Ç–æ–≤</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">0.28</span></td>
                                            <td class="px-4 py-3 whitespace-nowrap">92%</td>
                                            <td class="px-4 py-3 whitespace-nowrap">3</td>
                                            <td class="px-4 py-3 whitespace-nowrap">1.8 –¥–Ω</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">–í—ã—Å–æ–∫–∏–π</span></td>
                                        </tr>
                                        <tr id="row-auto" class="project-row hover:bg-gray-50 dark:hover:bg-gray-700" data-project="auto">
                                            <td class="px-4 py-3 whitespace-nowrap font-medium text-gray-800 dark:text-white">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">0.35</span></td>
                                            <td class="px-4 py-3 whitespace-nowrap">85%</td>
                                            <td class="px-4 py-3 whitespace-nowrap">5</td>
                                            <td class="px-4 py-3 whitespace-nowrap">2.5 –¥–Ω</td>
                                            <td class="px-4 py-3 whitespace-nowrap"><span class="px-2 py-1 rounded-full bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">–í—ã—Å–æ–∫–∏–π</span></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        let currentFilter = 'all';
        const activeProjects = new Set(['crm', 'mobile', 'portal', 'auto']);
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
        function showTab(tabId) {
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            document.getElementById(tabId).classList.add('active');
            
            // –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('bg-blue-50', 'dark:bg-blue-900', 'text-blue-700', 'dark:text-blue-200');
                btn.classList.add('hover:bg-gray-100', 'dark:hover:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');
            });
            
            // –ï—Å–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∫–∞—á–µ—Å—Ç–≤–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
            if (tabId === 'quality-metrics' && !window.mainChart) {
                initCharts();
            }
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
        const projects = {
            'crm': {
                name: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CRM',
                color: '#FF6384',
                icon: 'users'
            },
            'mobile': {
                name: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                color: '#36A2EB',
                icon: 'mobile-alt'
            },
            'portal': {
                name: '–ü–æ—Ä—Ç–∞–ª –∫–ª–∏–µ–Ω—Ç–æ–≤',
                color: '#4BC0C0',
                icon: 'laptop'
            },
            'auto': {
                name: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è',
                color: '#FFCE56',
                icon: 'robot'
            }
        };

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤
        function initCharts() {
            createMainChart();
            createBugTypesChart();
            createFixSpeedChart();
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
        function createMainChart() {
            const ctx = document.getElementById('mainChart').getContext('2d');
            const months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω'];
            
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            const datasets = Object.entries(projects).map(([projectId, project]) => {
                const data = Array(months.length).fill(0).map(() => 
                    Math.floor(Math.random() * 30) + 10
                );
                
                return {
                    id: projectId,
                    label: project.name,
                    data: data,
                    borderColor: project.color,
                    backgroundColor: `${project.color}40`,
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true,
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    hidden: !activeProjects.has(projectId)
                };
            });

            // –¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ–º–Ω–æ–π/—Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
            const textColor = document.documentElement.classList.contains('dark') ? '#E5E7EB' : '#374151';
            const gridColor = document.documentElement.classList.contains('dark') ? 'rgba(75, 85, 99, 0.5)' : 'rgba(209, 213, 219, 0.8)';
            
            window.mainChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: months,
                    datasets: datasets
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        },
                        legend: {
                            display: false
                        }
                    },
                    interaction: {
                        mode: 'nearest',
                        axis: 'x',
                        intersect: false
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: gridColor
                            },
                            ticks: {
                                color: textColor
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                color: textColor
                            }
                        }
                    }
                }
            });

            // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –ª–µ–≥–µ–Ω–¥—É
            updateLegend();
        }

        // –°–æ–∑–¥–∞–µ–º –ª–µ–≥–µ–Ω–¥—É –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
        function updateLegend() {
            const legendContainer = document.getElementById('mainChartLegend');
            legendContainer.innerHTML = '';
            
            window.mainChart.data.datasets.forEach((dataset) => {
                const projectId = dataset.id;
                const legendItem = document.createElement('div');
                legendItem.className = 'legend-item';
                legendItem.style.opacity = dataset.hidden ? '0.5' : '1';
                legendItem.onclick = () => {
                    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
                    const datasetIndex = window.mainChart.data.datasets.findIndex(d => d.id === projectId);
                    if (datasetIndex !== -1) {
                        const meta = window.mainChart.getDatasetMeta(datasetIndex);
                        meta.hidden = !meta.hidden;
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
                        if (meta.hidden) {
                            activeProjects.delete(projectId);
                        } else {
                            activeProjects.add(projectId);
                        }
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞
                        updateFilterButtonState();
                        
                        window.mainChart.update();
                        updateLegend();
                    }
                };
                
                legendItem.innerHTML = `
                    <span class="legend-color" style="background-color: ${dataset.borderColor}"></span>
                    <span class="text-sm text-gray-700 dark:text-gray-300">${dataset.label}</span>
                `;
                
                legendContainer.appendChild(legendItem);
            });
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞
        function updateFilterButtonState() {
            const allProjects = Object.keys(projects);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø—Ä–æ–µ–∫—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã
            const allActive = allProjects.every(projectId => activeProjects.has(projectId));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã"
            const allBtn = document.getElementById('filter-all');
            if (allActive) {
                allBtn.classList.remove('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
                allBtn.classList.add('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
            } else {
                allBtn.classList.remove('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
                allBtn.classList.add('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            allProjects.forEach(projectId => {
                const btn = document.getElementById(`filter-${projectId}`);
                const isActive = activeProjects.has(projectId);
                
                if (isActive && currentFilter === projectId) {
                    btn.classList.remove('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
                    btn.classList.add('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
                } else if (isActive) {
                    btn.classList.remove('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
                    btn.classList.add('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
                } else {
                    btn.classList.remove('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
                    btn.classList.add('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
                    btn.style.opacity = '0.5';
                }
            });
        }

        // –ì—Ä–∞—Ñ–∏–∫ —Ç–∏–ø–æ–≤ –±–∞–≥–æ–≤
        function createBugTypesChart() {
            const ctx = document.getElementById('bugTypesChart').getContext('2d');
            const types = ['UI/UX', '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ', '–°–µ—Ä–≤–µ—Ä–Ω—ã–µ', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'];
            
            window.bugTypesChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: types,
                    datasets: [{
                        data: types.map(() => Math.floor(Math.random() * 20) + 5),
                        backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56',
                            '#4BC0C0',
                            '#9966FF'
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '60%',
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: document.documentElement.classList.contains('dark') ? '#E5E7EB' : '#374151'
                            }
                        }
                    }
                }
            });
        }

        // –ì—Ä–∞—Ñ–∏–∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        function createFixSpeedChart() {
            const ctx = document.getElementById('fixSpeedChart').getContext('2d');
            const days = ['<1 –¥–Ω—è', '1-2 –¥–Ω—è', '3-5 –¥–Ω–µ–π', '6-10 –¥–Ω–µ–π', '>10 –¥–Ω–µ–π'];
            
            window.fixSpeedChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: days,
                    datasets: [{
                        label: '–ë–∞–≥–∏',
                        data: days.map(() => Math.floor(Math.random() * 30) + 5),
                        backgroundColor: days.map((_, i) => 
                            `hsl(${i * 60 + 240}, 70%, 60%)`
                        ),
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: document.documentElement.classList.contains('dark') ? 'rgba(75, 85, 99, 0.5)' : 'rgba(209, 213, 219, 0.8)'
                            },
                            ticks: {
                                color: document.documentElement.classList.contains('dark') ? '#E5E7EB' : '#374151'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                color: document.documentElement.classList.contains('dark') ? '#E5E7EB' : '#374151'
                            }
                        }
                    }
                }
            });
        }

        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
        function filterProjects(projectId) {
            currentFilter = projectId;
            
            // –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            const filterButtons = document.querySelectorAll('.project-toggle');
            filterButtons.forEach(btn => {
                btn.classList.remove('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
                btn.classList.add('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
                btn.style.opacity = '';
            });
            
            // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
            const activeBtn = document.getElementById(`filter-${projectId}`);
            if (activeBtn) {
                activeBtn.classList.add('active', 'bg-indigo-600', 'dark:bg-indigo-700', 'text-white');
                activeBtn.classList.remove('border', 'border-gray-300', 'dark:border-gray-600', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-gray-700');
            }
            
            // –û–±–Ω–æ–≤–∏—Ç—å activeProjects –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
            if (projectId === 'all') {
                // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
                Object.keys(projects).forEach(id => activeProjects.add(id));
            } else {
                // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
                activeProjects.clear();
                activeProjects.add(projectId);
            }
            
            // –û–±–Ω–æ–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if (window.mainChart) {
                window.mainChart.data.datasets.forEach(dataset => {
                    const meta = window.mainChart.getDatasetMeta(
                        window.mainChart.data.datasets.findIndex(d => d.id === dataset.id)
                    );
                    meta.hidden = !activeProjects.has(dataset.id);
                });
                window.mainChart.update();
                updateLegend();
            }
            
            // –û–±–Ω–æ–≤–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
            document.querySelectorAll('.project-row').forEach(row => {
                const rowProjectId = row.dataset.project;
                if (projectId === 'all' || activeProjects.has(rowProjectId)) {
                    row.classList.remove('hidden');
                } else {
                    row.classList.add('hidden');
                }
            });
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
        function toggleTheme() {
            const html = document.documentElement;
            html.classList.toggle('dark');
            localStorage.setItem('darkMode', html.classList.contains('dark'));
            
            // –û–±–Ω–æ–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É
            const themeIcon = document.getElementById('themeToggle');
            if (html.classList.contains('dark')) {
                themeIcon.innerHTML = '<i class="fas fa-sun"></i>';
            } else {
                themeIcon.innerHTML = '<i class="fas fa-moon"></i>';
            }
            
            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            if (window.mainChart) {
                window.mainChart.destroy();
                window.bugTypesChart.destroy();
                window.fixSpeedChart.destroy();
                initCharts();
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        function checkTheme() {
            const darkMode = localStorage.getItem('darkMode') === 'true' || 
                            (!localStorage.getItem('darkMode') && window.matchMedia('(prefers-color-scheme: dark)').matches);
            
            if (darkMode) {
                document.documentElement.classList.add('dark');
                document.getElementById('themeToggle').innerHTML = '<i class="fas fa-sun"></i>';
            }
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        document.addEventListener('DOMContentLoaded', function() {
            checkTheme();
            document.getElementById('themeToggle').addEventListener('click', toggleTheme);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
            if (document.getElementById('quality-metrics').classList.contains('active')) {
                initCharts();
            }
        });
    </script>
</body>
</html>